#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Script para adicionar URLs das imagens dos emojis de animais
usando a API do GitHub emojis
"""

import csv
import requests
import json

def buscar_urls_emojis():
    """Busca as URLs dos emojis da API do GitHub"""
    try:
        response = requests.get('https://api.github.com/emojis')
        response.raise_for_status()
        return response.json()
    except requests.RequestException as e:
        print(f"Erro ao buscar dados da API: {e}")
        return {}

def mapear_emoji_para_nome(emoji_data):
    """Cria um mapeamento reverso de emoji para nome baseado nos dados da API"""
    # Dicion√°rio para mapear emojis espec√≠ficos para seus nomes na API
    emoji_para_nome = {}
    
    # Alguns mapeamentos espec√≠ficos que encontramos na API
    mapeamentos_conhecidos = {
        'üêú': 'ant',
        'ü¶°': 'badger', 
        'ü¶á': 'bat',
        'ü¶´': 'beaver',
        'ü™≤': 'beetle',
        'üê¶': 'bird',
        'ü¶¨': 'bison',
        'üê°': 'blowfish',
        'üêÉ': 'buffalo',
        'üêõ': 'bug',
        'ü¶ã': 'butterfly',
        'üê´': 'camel',
        'üêà': 'cat',
        'üê§': 'baby_chick',  # chick -> baby_chick na API
        'üêøÔ∏è': 'chipmunk',
        'ü™≥': 'cockroach',
        'ü™∏': 'coral',
        'üêÑ': 'cow',
        'ü¶Ä': 'crab',
        'ü¶ó': 'cricket',
        'üêä': 'crocodile',
        'ü¶å': 'deer',
        'ü¶§': 'dodo',
        'üêï': 'dog',
        'üê¨': 'dolphin',
        'üïäÔ∏è': 'dove',
        'üê™': 'dromedary_camel',  # dromedary -> dromedary_camel
        'ü¶Ü': 'duck',
        'ü¶Ö': 'eagle',
        'üêò': 'elephant',
        'üêü': 'fish',
        'ü¶©': 'flamingo',
        'ü™∞': 'fly',
        'ü¶í': 'giraffe',
        'üêê': 'goat',
        'ü™ø': 'goose',
        'ü¶ç': 'gorilla',
        'ü¶î': 'hedgehog',
        'ü¶õ': 'hippopotamus',
        'üêù': 'honeybee',  # abelha -> honeybee
        'üêé': 'horse',
        'ü™º': 'jellyfish',
        'ü¶ò': 'kangaroo',
        'üêû': 'lady_beetle',  # joaninha -> lady_beetle
        'üêÜ': 'leopard',
        'ü¶é': 'lizard',
        'ü¶ô': 'llama',
        'ü¶û': 'lobster',
        'ü¶£': 'mammoth',
        'üêí': 'monkey',
        'ü¶ü': 'mosquito',
        'üêÅ': 'mouse',
        'üêô': 'octopus',
        'ü¶ß': 'orangutan',
        'ü¶¶': 'otter',
        'ü¶â': 'owl',
        'üêÇ': 'ox',
        'ü¶ú': 'parrot',
        'ü¶ö': 'peacock',
        'üêß': 'penguin',
        'üêñ': 'pig',
        'üê©': 'poodle',
        'üêá': 'rabbit',
        'üêè': 'ram',
        'üêÄ': 'rat',
        'ü¶è': 'rhinoceros',
        'üêì': 'rooster',
        'ü¶ï': 'sauropod',
        'ü¶Ç': 'scorpion',
        'ü¶≠': 'seal',
        'üêë': 'sheep',
        'ü¶ê': 'shrimp',
        'ü¶®': 'skunk',
        'ü¶•': 'sloth',
        'üêå': 'snail',
        'üêç': 'snake',
        'üï∑Ô∏è': 'spider',
        'ü¶ë': 'squid',
        'ü¶¢': 'swan',
        'ü¶ñ': 't-rex',
        'üêÖ': 'tiger',
        'ü¶É': 'turkey',
        'üê¢': 'turtle',
        'ü™±': 'worm',
        'üêã': 'whale'
    }
    
    return mapeamentos_conhecidos

def processar_csv():
    """Processa o arquivo CSV e adiciona a coluna URL"""
    # Buscar dados da API
    print("Buscando dados da API do GitHub...")
    emoji_data = buscar_urls_emojis()
    
    if not emoji_data:
        print("Erro: N√£o foi poss√≠vel obter dados da API")
        return
    
    # Criar mapeamento de emoji para nome
    emoji_para_nome = mapear_emoji_para_nome(emoji_data)
    
    # Ler arquivo original
    linhas_originais = []
    with open('emojis-animais.csv', 'r', encoding='utf-8') as arquivo:
        reader = csv.reader(arquivo)
        linhas_originais = list(reader)
    
    # Criar arquivo com URLs
    with open('emojis-animais-com-urls.csv', 'w', encoding='utf-8', newline='') as arquivo:
        writer = csv.writer(arquivo)
        
        # Escrever cabe√ßalho com nova coluna
        cabecalho = linhas_originais[0] + ['URL']
        writer.writerow(cabecalho)
        
        # Processar cada linha de dados
        for linha in linhas_originais[1:]:
            emoji = linha[0]
            nome_ingles = linha[1].lower()
            
            # Tentar encontrar URL do emoji
            url = ""
            
            # Primeiro, tentar pelo mapeamento direto do emoji
            if emoji in emoji_para_nome:
                nome_api = emoji_para_nome[emoji]
                if nome_api in emoji_data:
                    url = emoji_data[nome_api]
            
            # Se n√£o encontrou, tentar pelo nome em ingl√™s
            if not url and nome_ingles in emoji_data:
                url = emoji_data[nome_ingles]
            
            # Adicionar URL √† linha
            nova_linha = linha + [url]
            writer.writerow(nova_linha)
            
            if url:
                print(f"‚úì {emoji} ({nome_ingles}) -> {url}")
            else:
                print(f"‚úó {emoji} ({nome_ingles}) -> URL n√£o encontrada")
    
    print(f"\nArquivo 'emojis-animais-com-urls.csv' criado com sucesso!")

if __name__ == "__main__":
    processar_csv()
